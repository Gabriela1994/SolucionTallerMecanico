// <auto-generated />
using System;
using AccesoDatos.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesoDatos.Migrations
{
    [DbContext(typeof(TallerMecanicoContext))]
    partial class TallerMecanicoContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Modelos.Color", b =>
                {
                    b.Property<int>("IdColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdColor"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdColor");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("Modelos.DetalleRevision", b =>
                {
                    b.Property<int>("IdDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalle"), 1L, 1);

                    b.Property<int>("IdRevision")
                        .HasColumnType("int");

                    b.Property<int>("IdServicio")
                        .HasColumnType("int");

                    b.HasKey("IdDetalle");

                    b.HasIndex("IdRevision");

                    b.HasIndex("IdServicio");

                    b.ToTable("DetalleRevision");
                });

            modelBuilder.Entity("Modelos.Marca", b =>
                {
                    b.Property<int>("IdMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMarca"), 1L, 1);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMarca");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("Modelos.Revision", b =>
                {
                    b.Property<int>("IdRevision")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRevision"), 1L, 1);

                    b.Property<DateTime>("Fecha_ingreso")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("Hora")
                        .HasColumnType("time");

                    b.Property<int>("IdVehiculo")
                        .HasColumnType("int");

                    b.HasKey("IdRevision");

                    b.HasIndex("IdVehiculo");

                    b.ToTable("Revision");
                });

            modelBuilder.Entity("Modelos.Servicio", b =>
                {
                    b.Property<int>("IdServicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServicio"), 1L, 1);

                    b.Property<string>("Nombre_servicio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Precio_estimado")
                        .HasColumnType("float");

                    b.HasKey("IdServicio");

                    b.ToTable("Servicio");
                });

            modelBuilder.Entity("Modelos.Vehiculo", b =>
                {
                    b.Property<int>("IdVehiculo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVehiculo"), 1L, 1);

                    b.Property<int>("ColorIdColor")
                        .HasColumnType("int");

                    b.Property<int>("MarcaIdMarca")
                        .HasColumnType("int");

                    b.Property<string>("Matricula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdVehiculo");

                    b.HasIndex("ColorIdColor");

                    b.HasIndex("MarcaIdMarca");

                    b.ToTable("Vehiculo");
                });

            modelBuilder.Entity("Modelos.DetalleRevision", b =>
                {
                    b.HasOne("Modelos.Revision", null)
                        .WithMany()
                        .HasForeignKey("IdRevision")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("Modelos.Servicio", null)
                        .WithMany()
                        .HasForeignKey("IdServicio")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();
                });

            modelBuilder.Entity("Modelos.Revision", b =>
                {
                    b.HasOne("Modelos.Vehiculo", "Vehiculo")
                        .WithMany("Revision")
                        .HasForeignKey("IdVehiculo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehiculo");
                });

            modelBuilder.Entity("Modelos.Vehiculo", b =>
                {
                    b.HasOne("Modelos.Color", "Color")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ColorIdColor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Modelos.Marca", "Marca")
                        .WithMany("Vehiculos")
                        .HasForeignKey("MarcaIdMarca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Modelos.Color", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Modelos.Marca", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Modelos.Vehiculo", b =>
                {
                    b.Navigation("Revision");
                });
#pragma warning restore 612, 618
        }
    }
}
